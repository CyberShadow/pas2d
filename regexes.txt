\bunit\b
module

\binterface\b
// interface

\bimplementation\b
// implementation

\buses\b
import

\binitialization\b
shared static this()

\bfinalization\b
shared static ~this()

\bvar\b
// var

\btype\b
alias

\{
/*

\}
*/

\bbegin\b
{

\bend\.


\bend\b;?
}

(\w+)\s*:\s*(\w+)
$2 $1

\bprocedure (\w+)(\s*\((.*)\))?;
void $1($3)

\bfunction (\w+)\s*(\((.*)\)\s*)?:\s*(\w+);
$4 $1($3)

\brepeat\b
do {

\buntil (.*);
} while (!($1));

\bif 
if (

 then\b
)

\braise (\w+).Create
throw new $1

\btry\b
try {

\bexcept\b
} catch {

\bfinally\b
} finally {

\brecord\b
struct {

\bfor (\w+)\s*:=(.*) to (.*) do\b
foreach ($1; $2..$3+1)

\bBreak\b
break

\bContinue\b
continue

\bExit\b
return

([^=!><:])=([^=])
$1==$2

<>
!=

\$
0x

\s*:=\s*
 = 

@
&

["\\]
\\$0

'
"

\b""\b
'

\bInc\((\w+)\);
$1++;

\bDec\((\w+)\);
$1--;

\bInc\((\w+), (.*)\);
$1 += $2;

\bDec\((\w+), (.*)\);
$1 -= $2;

\bNew\((\w+)\);
$1 = new typeof($1);

\bFree\((\w+)\);
delete $1;

\band\b
&&

\bor\b
||

\bnot 
!

\bInteger\b
int

\bCardinal\b
uint

\bInt64\b
long

\bString\b
string

\bBoolean\b
bool

\bTHandle\b
HANDLE

\bFileExists\b
exists

\bIntToStr\b
text

\bStrToInt\b
to!int

\bnil\b
null

\bFalse\b
false

\bTrue\b
true

\^(\w+)
$1*

(\w+)\^
*$1

\!\(false\)
true

\!\(true\)
false
